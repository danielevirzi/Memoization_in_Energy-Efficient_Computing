sampling interval: 200, target function: dijkstra_lru_cache, input size: frozenset({('N', frozenset({('G', 6), ('P', 9), ('R', 1), ('S', 5), ('H', 7), ('C', 8), ('I', 2), ('V', 7), ('Q', 2), ('F', 8), ('W', 8), ('M', 6), ('D', 9), ('J', 5), ('O', 4), ('T', 6), ('X', 9), ('B', 6), ('Y', 3), ('U', 2), ('A', 6), ('K', 8), ('E', 3), ('L', 8)})), ('Y', frozenset({('B', 5), ('K', 7), ('H', 7), ('L', 1), ('C', 2), ('D', 7), ('X', 7), ('O', 5), ('I', 8), ('R', 6), ('V', 4), ('U', 6), ('E', 1), ('F', 8), ('M', 6), ('W', 5), ('J', 2), ('P', 7), ('T', 3), ('Q', 4), ('A', 6), ('S', 9), ('N', 3), ('G', 3)})), ('E', frozenset({('P', 9), ('A', 5), ('K', 1), ('X', 4), ('L', 4), ('C', 8), ('I', 5), ('J', 6), ('Y', 1), ('R', 3), ('Q', 5), ('D', 6), ('G', 7), ('O', 7), ('B', 3), ('V', 9), ('H', 2), ('S', 6), ('U', 8), ('F', 4), ('M', 8), ('W', 7), ('N', 3), ('T', 2)})), ('M', frozenset({('J', 4), ('A', 2), ('U', 1), ('K', 7), ('Q', 9), ('E', 8), ('L', 7), ('P', 8), ('I', 5), ('B', 7), ('S', 4), ('H', 6), ('D', 6), ('C', 7), ('G', 4), ('V', 3), ('R', 5), ('Y', 6), ('F', 7), ('W', 7), ('N', 6), ('X', 5), ('T', 2), ('O', 3)})), ('C', frozenset({('O', 9), ('I', 9), ('Y', 2), ('H', 4), ('M', 7), ('E', 8), ('X', 4), ('L', 4), ('N', 8), ('T', 7), ('V', 1), ('R', 3), ('Q', 2), ('S', 4), ('K', 6), ('W', 5), ('P', 1), ('J', 5), ('B', 6), ('A', 3), ('F', 7), ('U', 8), ('D', 2), ('G', 3)})), ('U', frozenset({('J', 4), ('V', 2), ('R', 4), ('T', 8), ('K', 7), ('M', 1), ('F', 6), ('W', 9), ('C', 8), ('B', 7), ('S', 7), ('A', 4), ('L', 9), ('O', 4), ('G', 7), ('Y', 6), ('Q', 1), ('H', 8), ('E', 9), ('D', 5), ('P', 3), ('N', 6), ('X', 5), ('I', 3)})), ('G', frozenset({('V', 2), ('T', 8), ('U', 7), ('C', 3), ('M', 4), ('D', 1), ('L', 1), ('P', 2), ('B', 4), ('R', 3), ('F', 2), ('Q', 5), ('K', 9), ('E', 7), ('O', 7), ('J', 8), ('Y', 3), ('A', 6), ('H', 5), ('S', 9), ('W', 4), ('N', 6), ('X', 5), ('I', 3)})), ('W', frozenset({('I', 6), ('R', 7), ('Y', 5), ('K', 4), ('Q', 6), ('F', 9), ('M', 7), ('C', 5), ('N', 8), ('O', 2), ('B', 4), ('V', 1), ('A', 7), ('U', 9), ('H', 9), ('E', 7), ('D', 6), ('P', 1), ('X', 3), ('J', 5), ('G', 4), ('S', 3), ('L', 5), ('T', 2)})), ('S', frozenset({('J', 4), ('R', 1), ('I', 6), ('T', 5), ('V', 2), ('A', 2), ('U', 7), ('Q', 9), ('M', 4), ('W', 3), ('D', 7), ('O', 8), ('X', 6), ('C', 4), ('N', 7), ('Y', 9), ('H', 2), ('K', 5), ('F', 1), ('E', 6), ('P', 3), ('L', 8), ('G', 9), ('B', 2)})), ('Q', frozenset({('K', 4), ('H', 4), ('U', 1), ('F', 9), ('W', 6), ('P', 5), ('N', 2), ('G', 5), ('J', 3), ('V', 7), ('R', 9), ('Y', 4), ('A', 4), ('M', 9), ('C', 7), ('I', 1), ('T', 3), ('B', 3), ('S', 9), ('E', 6), ('L', 5), ('D', 8), ('X', 8), ('O', 3)})), ('A', frozenset({('G', 6), ('V', 5), ('U', 4), ('S', 2), ('C', 3), ('E', 5), ('D', 4), ('L', 4), ('J', 3), ('X', 3), ('P', 7), ('T', 9), ('R', 8), ('I', 7), ('Y', 6), ('Q', 4), ('H', 2), ('K', 5), ('F', 1), ('M', 2), ('W', 7), ('N', 6), ('B', 2), ('O', 3)})), ('T', frozenset({('O', 9), ('P', 9), ('S', 5), ('K', 7), ('H', 1), ('E', 2), ('D', 1), ('X', 7), ('N', 5), ('I', 5), ('G', 8), ('J', 6), ('R', 9), ('V', 4), ('Q', 5), ('W', 2), ('L', 3), ('C', 7), ('B', 6), ('Y', 3), ('A', 9), ('M', 2), ('U', 8), ('F', 4)})), ('K', frozenset({('O', 9), ('C', 6), ('A', 5), ('S', 5), ('U', 4), ('M', 7), ('W', 9), ('N', 8), ('P', 2), ('T', 7), ('R', 3), ('Y', 7), ('E', 1), ('F', 5), ('D', 3), ('L', 6), ('V', 3), ('Q', 4), ('H', 8), ('X', 8), ('J', 1), ('G', 9), ('B', 2), ('I', 3)})), ('B', frozenset({('R', 1), ('Y', 5), ('A', 2), ('S', 2), ('U', 7), ('M', 7), ('D', 7), ('P', 8), ('J', 9), ('Q', 5), ('F', 8), ('L', 3), ('O', 4), ('X', 9), ('I', 1), ('G', 4), ('T', 6), ('V', 3), ('K', 2), ('H', 5), ('W', 4), ('E', 3), ('N', 6), ('C', 6)})), ('O', frozenset({('C', 9), ('R', 4), ('Y', 5), ('S', 5), ('Q', 3), ('U', 7), ('F', 6), ('X', 4), ('P', 2), ('G', 8), ('B', 4), ('V', 1), ('K', 9), ('H', 9), ('M', 3), ('W', 2), ('E', 7), ('L', 9), ('N', 4), ('I', 4), ('T', 9), ('A', 3), ('D', 2), ('J', 1)})), ('P', frozenset({('C', 9), ('V', 2), ('B', 8), ('R', 7), ('S', 8), ('F', 3), ('L', 1), ('D', 4), ('G', 2), ('O', 2), ('T', 4), ('J', 6), ('I', 8), ('A', 7), ('Y', 7), ('U', 3), ('Q', 5), ('X', 9), ('K', 2), ('H', 5), ('W', 1), ('M', 8), ('E', 9), ('N', 9)})), ('D', frozenset({('W', 3), ('C', 2), ('T', 1), ('O', 2), ('B', 7), ('I', 2), ('R', 6), ('Y', 7), ('S', 7), ('A', 4), ('K', 3), ('F', 5), ('Q', 8), ('M', 6), ('G', 1), ('P', 4), ('V', 6), ('U', 5), ('H', 8), ('E', 6), ('L', 5), ('X', 2), ('J', 7), ('N', 9)})), ('V', frozenset({('A', 5), ('S', 2), ('J', 3), ('P', 2), ('T', 4), ('I', 8), ('Y', 4), ('K', 9), ('U', 9), ('H', 3), ('D', 3), ('X', 6), ('C', 1), ('N', 7), ('G', 4), ('B', 9), ('R', 5), ('Q', 7), ('M', 2), ('F', 7), ('W', 1), ('E', 9), ('L', 8), ('O', 3)})), ('X', frozenset({('P', 9), ('W', 3), ('L', 4), ('G', 5), ('J', 3), ('I', 2), ('T', 7), ('R', 3), ('Y', 7), ('Q', 8), ('E', 4), ('O', 4), ('C', 4), ('B', 9), ('V', 6), ('A', 3), ('S', 6), ('U', 5), ('F', 1), ('K', 8), ('H', 8), ('M', 5), ('D', 2), ('N', 9)})), ('F', frozenset({('J', 4), ('I', 6), ('O', 6), ('B', 8), ('Y', 8), ('Q', 9), ('M', 7), ('W', 9), ('X', 1), ('G', 2), ('N', 8), ('T', 4), ('V', 7), ('A', 1), ('S', 1), ('U', 6), ('H', 3), ('E', 4), ('C', 7), ('R', 5), ('K', 2), ('D', 5), ('L', 5), ('P', 3)})), ('L', frozenset({('O', 9), ('V', 2), ('I', 9), ('S', 8), ('M', 7), ('F', 6), ('X', 4), ('N', 8), ('Y', 1), ('A', 4), ('Q', 5), ('U', 9), ('K', 6), ('E', 4), ('W', 5), ('P', 1), ('G', 1), ('C', 4), ('J', 2), ('T', 3), ('B', 3), ('R', 2), ('H', 2), ('D', 5)})), ('H', frozenset({('O', 9), ('B', 5), ('U', 4), ('A', 2), ('S', 2), ('F', 3), ('E', 2), ('W', 9), ('P', 5), ('T', 1), ('G', 5), ('R', 3), ('Y', 7), ('M', 6), ('C', 4), ('I', 1), ('N', 7), ('V', 6), ('Q', 4), ('K', 8), ('L', 2), ('D', 8), ('X', 8), ('J', 7)})), ('R', frozenset({('V', 5), ('U', 4), ('A', 8), ('Q', 3), ('N', 2), ('B', 1), ('S', 1), ('K', 3), ('H', 3), ('F', 5), ('D', 6), ('X', 3), ('J', 5), ('P', 4), ('O', 7), ('T', 9), ('I', 7), ('Y', 6), ('M', 5), ('E', 3), ('L', 2), ('W', 7), ('C', 3), ('G', 3)})), ('J', frozenset({('O', 9), ('Y', 2), ('V', 8), ('K', 1), ('Q', 3), ('U', 1), ('H', 7), ('M', 4), ('W', 3), ('D', 7), ('C', 5), ('N', 5), ('G', 8), ('I', 2), ('S', 4), ('T', 6), ('B', 9), ('R', 5), ('A', 3), ('F', 4), ('E', 6), ('L', 2), ('X', 5), ('P', 6)})), ('I', frozenset({('T', 5), ('C', 9), ('R', 7), ('Y', 8), ('H', 1), ('F', 6), ('E', 5), ('N', 2), ('P', 8), ('B', 1), ('A', 7), ('K', 3), ('U', 3), ('L', 9), ('O', 4), ('J', 2), ('V', 9), ('Q', 1), ('S', 6), ('M', 5), ('W', 4), ('D', 2), ('X', 2), ('G', 3)}))})
  File "<string>", line 1
    import sys; import os; import numpy as np; sys.path.append(/Users/rr/GreenLab/ProjectCode/profiling-using-exp-runner/packages); import memory.dijkstra as module; graph = frozenset({(N, frozenset({(G, 6), (P, 9), (R, 1), (S, 5), (H, 7), (C, 8), (I, 2), (V, 7), (Q, 2), (F, 8), (W, 8), (M, 6), (D, 9), (J, 5), (O, 4), (T, 6), (X, 9), (B, 6), (Y, 3), (U, 2), (A, 6), (K, 8), (E, 3), (L, 8)})), (Y, frozenset({(B, 5), (K, 7), (H, 7), (L, 1), (C, 2), (D, 7), (X, 7), (O, 5), (I, 8), (R, 6), (V, 4), (U, 6), (E, 1), (F, 8), (M, 6), (W, 5), (J, 2), (P, 7), (T, 3), (Q, 4), (A, 6), (S, 9), (N, 3), (G, 3)})), (E, frozenset({(P, 9), (A, 5), (K, 1), (X, 4), (L, 4), (C, 8), (I, 5), (J, 6), (Y, 1), (R, 3), (Q, 5), (D, 6), (G, 7), (O, 7), (B, 3), (V, 9), (H, 2), (S, 6), (U, 8), (F, 4), (M, 8), (W, 7), (N, 3), (T, 2)})), (M, frozenset({(J, 4), (A, 2), (U, 1), (K, 7), (Q, 9), (E, 8), (L, 7), (P, 8), (I, 5), (B, 7), (S, 4), (H, 6), (D, 6), (C, 7), (G, 4), (V, 3), (R, 5), (Y, 6), (F, 7), (W, 7), (N, 6), (X, 5), (T, 2), (O, 3)})), (C, frozenset({(O, 9), (I, 9), (Y, 2), (H, 4), (M, 7), (E, 8), (X, 4), (L, 4), (N, 8), (T, 7), (V, 1), (R, 3), (Q, 2), (S, 4), (K, 6), (W, 5), (P, 1), (J, 5), (B, 6), (A, 3), (F, 7), (U, 8), (D, 2), (G, 3)})), (U, frozenset({(J, 4), (V, 2), (R, 4), (T, 8), (K, 7), (M, 1), (F, 6), (W, 9), (C, 8), (B, 7), (S, 7), (A, 4), (L, 9), (O, 4), (G, 7), (Y, 6), (Q, 1), (H, 8), (E, 9), (D, 5), (P, 3), (N, 6), (X, 5), (I, 3)})), (G, frozenset({(V, 2), (T, 8), (U, 7), (C, 3), (M, 4), (D, 1), (L, 1), (P, 2), (B, 4), (R, 3), (F, 2), (Q, 5), (K, 9), (E, 7), (O, 7), (J, 8), (Y, 3), (A, 6), (H, 5), (S, 9), (W, 4), (N, 6), (X, 5), (I, 3)})), (W, frozenset({(I, 6), (R, 7), (Y, 5), (K, 4), (Q, 6), (F, 9), (M, 7), (C, 5), (N, 8), (O, 2), (B, 4), (V, 1), (A, 7), (U, 9), (H, 9), (E, 7), (D, 6), (P, 1), (X, 3), (J, 5), (G, 4), (S, 3), (L, 5), (T, 2)})), (S, frozenset({(J, 4), (R, 1), (I, 6), (T, 5), (V, 2), (A, 2), (U, 7), (Q, 9), (M, 4), (W, 3), (D, 7), (O, 8), (X, 6), (C, 4), (N, 7), (Y, 9), (H, 2), (K, 5), (F, 1), (E, 6), (P, 3), (L, 8), (G, 9), (B, 2)})), (Q, frozenset({(K, 4), (H, 4), (U, 1), (F, 9), (W, 6), (P, 5), (N, 2), (G, 5), (J, 3), (V, 7), (R, 9), (Y, 4), (A, 4), (M, 9), (C, 7), (I, 1), (T, 3), (B, 3), (S, 9), (E, 6), (L, 5), (D, 8), (X, 8), (O, 3)})), (A, frozenset({(G, 6), (V, 5), (U, 4), (S, 2), (C, 3), (E, 5), (D, 4), (L, 4), (J, 3), (X, 3), (P, 7), (T, 9), (R, 8), (I, 7), (Y, 6), (Q, 4), (H, 2), (K, 5), (F, 1), (M, 2), (W, 7), (N, 6), (B, 2), (O, 3)})), (T, frozenset({(O, 9), (P, 9), (S, 5), (K, 7), (H, 1), (E, 2), (D, 1), (X, 7), (N, 5), (I, 5), (G, 8), (J, 6), (R, 9), (V, 4), (Q, 5), (W, 2), (L, 3), (C, 7), (B, 6), (Y, 3), (A, 9), (M, 2), (U, 8), (F, 4)})), (K, frozenset({(O, 9), (C, 6), (A, 5), (S, 5), (U, 4), (M, 7), (W, 9), (N, 8), (P, 2), (T, 7), (R, 3), (Y, 7), (E, 1), (F, 5), (D, 3), (L, 6), (V, 3), (Q, 4), (H, 8), (X, 8), (J, 1), (G, 9), (B, 2), (I, 3)})), (B, frozenset({(R, 1), (Y, 5), (A, 2), (S, 2), (U, 7), (M, 7), (D, 7), (P, 8), (J, 9), (Q, 5), (F, 8), (L, 3), (O, 4), (X, 9), (I, 1), (G, 4), (T, 6), (V, 3), (K, 2), (H, 5), (W, 4), (E, 3), (N, 6), (C, 6)})), (O, frozenset({(C, 9), (R, 4), (Y, 5), (S, 5), (Q, 3), (U, 7), (F, 6), (X, 4), (P, 2), (G, 8), (B, 4), (V, 1), (K, 9), (H, 9), (M, 3), (W, 2), (E, 7), (L, 9), (N, 4), (I, 4), (T, 9), (A, 3), (D, 2), (J, 1)})), (P, frozenset({(C, 9), (V, 2), (B, 8), (R, 7), (S, 8), (F, 3), (L, 1), (D, 4), (G, 2), (O, 2), (T, 4), (J, 6), (I, 8), (A, 7), (Y, 7), (U, 3), (Q, 5), (X, 9), (K, 2), (H, 5), (W, 1), (M, 8), (E, 9), (N, 9)})), (D, frozenset({(W, 3), (C, 2), (T, 1), (O, 2), (B, 7), (I, 2), (R, 6), (Y, 7), (S, 7), (A, 4), (K, 3), (F, 5), (Q, 8), (M, 6), (G, 1), (P, 4), (V, 6), (U, 5), (H, 8), (E, 6), (L, 5), (X, 2), (J, 7), (N, 9)})), (V, frozenset({(A, 5), (S, 2), (J, 3), (P, 2), (T, 4), (I, 8), (Y, 4), (K, 9), (U, 9), (H, 3), (D, 3), (X, 6), (C, 1), (N, 7), (G, 4), (B, 9), (R, 5), (Q, 7), (M, 2), (F, 7), (W, 1), (E, 9), (L, 8), (O, 3)})), (X, frozenset({(P, 9), (W, 3), (L, 4), (G, 5), (J, 3), (I, 2), (T, 7), (R, 3), (Y, 7), (Q, 8), (E, 4), (O, 4), (C, 4), (B, 9), (V, 6), (A, 3), (S, 6), (U, 5), (F, 1), (K, 8), (H, 8), (M, 5), (D, 2), (N, 9)})), (F, frozenset({(J, 4), (I, 6), (O, 6), (B, 8), (Y, 8), (Q, 9), (M, 7), (W, 9), (X, 1), (G, 2), (N, 8), (T, 4), (V, 7), (A, 1), (S, 1), (U, 6), (H, 3), (E, 4), (C, 7), (R, 5), (K, 2), (D, 5), (L, 5), (P, 3)})), (L, frozenset({(O, 9), (V, 2), (I, 9), (S, 8), (M, 7), (F, 6), (X, 4), (N, 8), (Y, 1), (A, 4), (Q, 5), (U, 9), (K, 6), (E, 4), (W, 5), (P, 1), (G, 1), (C, 4), (J, 2), (T, 3), (B, 3), (R, 2), (H, 2), (D, 5)})), (H, frozenset({(O, 9), (B, 5), (U, 4), (A, 2), (S, 2), (F, 3), (E, 2), (W, 9), (P, 5), (T, 1), (G, 5), (R, 3), (Y, 7), (M, 6), (C, 4), (I, 1), (N, 7), (V, 6), (Q, 4), (K, 8), (L, 2), (D, 8), (X, 8), (J, 7)})), (R, frozenset({(V, 5), (U, 4), (A, 8), (Q, 3), (N, 2), (B, 1), (S, 1), (K, 3), (H, 3), (F, 5), (D, 6), (X, 3), (J, 5), (P, 4), (O, 7), (T, 9), (I, 7), (Y, 6), (M, 5), (E, 3), (L, 2), (W, 7), (C, 3), (G, 3)})), (J, frozenset({(O, 9), (Y, 2), (V, 8), (K, 1), (Q, 3), (U, 1), (H, 7), (M, 4), (W, 3), (D, 7), (C, 5), (N, 5), (G, 8), (I, 2), (S, 4), (T, 6), (B, 9), (R, 5), (A, 3), (F, 4), (E, 6), (L, 2), (X, 5), (P, 6)})), (I, frozenset({(T, 5), (C, 9), (R, 7), (Y, 8), (H, 1), (F, 6), (E, 5), (N, 2), (P, 8), (B, 1), (A, 7), (K, 3), (U, 3), (L, 9), (O, 4), (J, 2), (V, 9), (Q, 1), (S, 6), (M, 5), (W, 4), (D, 2), (X, 2), (G, 3)}))}); module.dijkstra_lru_cache(graph, A); 
                                                               ^
SyntaxError: invalid syntax
Energy consumption in joules: 6.8842584342956545 for 0.22930852 sec of execution.
